(()=>{"use strict";const t={SPEED:5,RADIUS:15,BORDER_MARGIN:15,ID_DISPLAY_OFFSET:25,STROKE_WIDTH:3,COLORS:["#FF6B6B","#4ECDC4","#45B7D1","#96CEB4","#FFEAA7","#DDA0DD","#98D8C8"]},e=800,s=600,o={RECONNECT_DELAY:3e3,CONNECTION_TIMEOUT:1e3,CONTROLS:["w","a","s","d"]},i="#000";function n(){let t="";for(let e=0;e<30;e++)t+="0123456789abcdefghijklmnopqrstuvwxyz"[Math.floor(36*Math.random())];return t}class r{constructor(t){this.currentRoom=null,this.ws=null,this.messageHandlers=[],this.userId=t}setWebSocket(t){this.ws=t,this.setupMessageHandler()}createRoom(){const t=function(){let t="room_";for(let e=0;e<10;e++)t+="0123456789abcdefghijklmnopqrstuvwxyz"[Math.floor(36*Math.random())];return t}();return this.joinRoom(t,!0),t}joinRoom(t,e=!1){if(!this.ws||this.ws.readyState!==WebSocket.OPEN)return void console.error("WebSocket not connected");const s={type:e?"create-room":"join-room",roomId:t,userId:this.userId};this.ws.send(JSON.stringify(s)),this.currentRoom=t,function(t){const e=`${window.location.origin}?room=${t}`;window.history.pushState({roomId:t},"",e)}(t)}leaveRoom(){if(!this.currentRoom||!this.ws)return;const t={type:"leave-room",roomId:this.currentRoom,userId:this.userId};this.ws.send(JSON.stringify(t)),this.currentRoom=null,window.history.pushState({},"",window.location.origin)}sendMessage(t){if(!this.currentRoom||!this.ws)return;const e={type:"room-message",roomId:this.currentRoom,userId:this.userId,message:t};this.ws.send(JSON.stringify(e))}getCurrentRoom(){return this.currentRoom}getRoomLink(){return this.currentRoom?(t=this.currentRoom,`${window.location.origin}?room=${t}`):null;var t}onMessage(t){this.messageHandlers.push(t)}setupMessageHandler(){this.ws&&(this.ws.onmessage=t=>{try{const e=JSON.parse(t.data);this.messageHandlers.forEach(t=>t(e))}catch(e){const s={type:"room-message",userId:"server",message:t.data};this.messageHandlers.forEach(t=>t(s))}})}}class a{constructor(){this.ws=null,this.canvas=null,this.ctx=null,this.roomControls=null,this.gameContainer=null,this.userIdDisplay=null,this.roomIdDisplay=null,this.roomLinkDisplay=null,this.players=new Map,this.projectiles=new Map,this.keys=new Set,this.gameRunning=!1,this.isMouseDown=!1,this.mouseX=0,this.mouseY=0,this.lastBurstTime=0,this.currentBurstShot=0,this.burstInProgress=!1,this.nextBurstShotTime=0,this.userId=n(),this.roomManager=new r(this.userId),this.myPlayer={id:this.userId,x:Math.random()*(e-2*t.BORDER_MARGIN)+t.BORDER_MARGIN,y:Math.random()*(s-2*t.BORDER_MARGIN)+t.BORDER_MARGIN,color:this.getRandomColor()},"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{this.initializeElements(),this.setupEventListeners(),this.checkForRoomInURL()}):(this.initializeElements(),this.setupEventListeners(),this.checkForRoomInURL())}initializeElements(){this.canvas=document.getElementById("gameCanvas"),this.roomControls=document.getElementById("roomControls"),this.gameContainer=document.getElementById("gameContainer"),this.userIdDisplay=document.getElementById("userId"),this.roomIdDisplay=document.getElementById("roomId"),this.roomLinkDisplay=document.getElementById("roomLink"),this.canvas&&this.roomControls&&this.gameContainer&&this.userIdDisplay&&this.roomIdDisplay&&this.roomLinkDisplay?(this.canvas.width=e,this.canvas.height=s,this.ctx=this.canvas.getContext("2d"),this.ctx?(this.userIdDisplay.textContent=this.userId,this.showRoomControls()):console.error("Could not get canvas context")):console.error("Some required DOM elements are missing")}setupEventListeners(){document.getElementById("hostBtn")?.addEventListener("click",()=>this.hostRoom()),document.getElementById("joinBtn")?.addEventListener("click",()=>this.joinRoom()),document.getElementById("leaveBtn")?.addEventListener("click",()=>this.leaveRoom()),document.getElementById("copyLinkBtn")?.addEventListener("click",()=>this.copyRoomLink()),document.addEventListener("keydown",t=>this.onKeyDown(t)),document.addEventListener("keyup",t=>this.onKeyUp(t)),document.addEventListener("mousedown",t=>this.onMouseDown(t)),document.addEventListener("mouseup",t=>this.onMouseUp(t)),document.addEventListener("mousemove",t=>this.onMouseMove(t)),this.roomManager.onMessage(t=>this.handleRoomMessage(t))}connectWebSocket(){const t="https:"===location.protocol?"wss:":"ws:";this.ws=new WebSocket(`${t}//${location.host}`),this.ws.onopen=()=>{console.log("Connected to WebSocket"),this.roomManager.setWebSocket(this.ws)},this.ws.onclose=()=>{console.log("Disconnected from WebSocket"),this.gameRunning=!1,setTimeout(()=>this.connectWebSocket(),o.RECONNECT_DELAY)},this.ws.onerror=t=>{console.error("WebSocket error:",t)}}checkForRoomInURL(){const t=new URLSearchParams(window.location.search).get("room");t&&(this.connectWebSocket(),setTimeout(()=>{this.roomManager.joinRoom(t)},o.CONNECTION_TIMEOUT))}hostRoom(){if(this.ws){const t=this.roomManager.createRoom();this.showGameContainer(t)}else this.connectWebSocket(),setTimeout(()=>{const t=this.roomManager.createRoom();this.showGameContainer(t)},o.CONNECTION_TIMEOUT)}joinRoom(){const t=prompt("Enter room link:");if(t)try{const e=new URL(t),s=new URLSearchParams(e.search).get("room");if(!s)return void alert("Invalid room link");this.ws?(this.roomManager.joinRoom(s),this.showGameContainer(s)):(this.connectWebSocket(),setTimeout(()=>{this.roomManager.joinRoom(s),this.showGameContainer(s)},o.CONNECTION_TIMEOUT))}catch(t){alert("Invalid room link format")}}leaveRoom(){this.roomManager.leaveRoom(),this.gameRunning=!1,this.players.clear(),this.projectiles.clear(),this.showRoomControls()}copyRoomLink(){const t=this.roomManager.getRoomLink();if(t&&this.roomLinkDisplay){this.roomLinkDisplay.value=t,this.roomLinkDisplay.select();try{document.execCommand("copy"),alert("Room link copied to clipboard!")}catch(e){navigator.clipboard?.writeText(t).then(()=>{alert("Room link copied to clipboard!")}).catch(()=>{alert("Could not copy to clipboard. Please copy manually.")})}}}onKeyDown(t){if(!this.gameRunning)return;const e=t.key.toLowerCase();o.CONTROLS.includes(e)&&(t.preventDefault(),this.keys.add(e))}onKeyUp(t){if(!this.gameRunning)return;const e=t.key.toLowerCase();o.CONTROLS.includes(e)&&(t.preventDefault(),this.keys.delete(e))}onMouseDown(t){this.gameRunning&&this.canvas&&0===t.button&&(this.isMouseDown=!0,this.updateMousePosition(t))}onMouseUp(t){this.gameRunning&&0===t.button&&(this.isMouseDown=!1,this.burstInProgress=!1,this.currentBurstShot=0)}onMouseMove(t){this.gameRunning&&this.updateMousePosition(t)}updateMousePosition(t){if(!this.canvas)return;const e=this.canvas.getBoundingClientRect();this.mouseX=t.clientX-e.left,this.mouseY=t.clientY-e.top}updateShooting(){if(!this.isMouseDown||!this.gameRunning)return;const t=Date.now();!this.burstInProgress&&t-this.lastBurstTime>=500&&(this.burstInProgress=!0,this.currentBurstShot=0,this.nextBurstShotTime=t,this.lastBurstTime=t),this.burstInProgress&&t>=this.nextBurstShotTime&&(this.launchProjectile(),this.currentBurstShot++,this.currentBurstShot>=1?this.burstInProgress=!1:this.nextBurstShotTime=t+100)}launchProjectile(){const t=this.mouseX-this.myPlayer.x,e=this.mouseY-this.myPlayer.y,s=Math.sqrt(t*t+e*e);if(0===s)return;const o=t/s,i=e/s;for(let t=0;t<1;t++){const t=.1*(Math.random()-.5),e=Math.atan2(i,o)+t,s={id:n(),x:this.myPlayer.x,y:this.myPlayer.y,velocityX:8*Math.cos(e),velocityY:8*Math.sin(e),range:250,distanceTraveled:0,ownerId:this.userId,timestamp:Date.now()};this.projectiles.set(s.id,s),this.roomManager.sendMessage(JSON.stringify({type:"projectile-launch",projectile:s}))}}updateProjectiles(){const t=[];this.projectiles.forEach((o,i)=>{o.x+=o.velocityX,o.y+=o.velocityY;const n=Math.sqrt(o.velocityX*o.velocityX+o.velocityY*o.velocityY);o.distanceTraveled+=n,(o.distanceTraveled>=o.range||o.x<0||o.x>e||o.y<0||o.y>s)&&t.push(i)}),t.forEach(t=>{this.projectiles.delete(t);const e=this.projectiles.get(t);e&&e.ownerId===this.userId&&this.roomManager.sendMessage(JSON.stringify({type:"projectile-remove",projectileId:t}))})}updatePlayerPosition(){if(!this.gameRunning)return;let o=!1;this.keys.has("w")&&this.myPlayer.y>t.BORDER_MARGIN&&(this.myPlayer.y-=t.SPEED,o=!0),this.keys.has("s")&&this.myPlayer.y<s-t.BORDER_MARGIN&&(this.myPlayer.y+=t.SPEED,o=!0),this.keys.has("a")&&this.myPlayer.x>t.BORDER_MARGIN&&(this.myPlayer.x-=t.SPEED,o=!0),this.keys.has("d")&&this.myPlayer.x<e-t.BORDER_MARGIN&&(this.myPlayer.x+=t.SPEED,o=!0),o&&this.roomManager.sendMessage(JSON.stringify({type:"player-move",x:this.myPlayer.x,y:this.myPlayer.y}))}handleRoomMessage(t){switch(t.type){case"room-created":console.log("Room created"),this.startGame();break;case"room-joined":console.log("Joined room"),this.startGame(),this.roomManager.sendMessage(JSON.stringify({type:"player-join",x:this.myPlayer.x,y:this.myPlayer.y,color:this.myPlayer.color}));break;case"user-joined":console.log(`User ${t.userId} joined`);break;case"user-left":console.log(`User ${t.userId} left`),this.players.delete(t.userId),this.projectiles.forEach((e,s)=>{e.ownerId===t.userId&&this.projectiles.delete(s)});break;case"room-message":this.handleGameMessage(t);break;case"room-error":alert(`Error: ${t.message}`)}}handleGameMessage(t){if(t.message)try{const e=JSON.parse(t.message);switch(e.type){case"player-join":this.players.set(t.userId,{id:t.userId,x:e.x,y:e.y,color:e.color}),this.roomManager.sendMessage(JSON.stringify({type:"player-join",x:this.myPlayer.x,y:this.myPlayer.y,color:this.myPlayer.color}));break;case"player-move":if(this.players.has(t.userId)){const s=this.players.get(t.userId);s.x=e.x,s.y=e.y}break;case"projectile-launch":t.userId!==this.userId&&this.projectiles.set(e.projectile.id,e.projectile);break;case"projectile-remove":this.projectiles.delete(e.projectileId)}}catch(t){console.error("Error parsing game message:",t)}}startGame(){this.gameRunning=!0,this.gameLoop()}gameLoop(){this.gameRunning&&this.ctx&&this.canvas&&(this.updatePlayerPosition(),this.updateShooting(),this.updateProjectiles(),this.ctx.fillStyle="#f0f0f0",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.strokeStyle="#333",this.ctx.lineWidth=2,this.ctx.strokeRect(0,0,this.canvas.width,this.canvas.height),this.projectiles.forEach(t=>{this.drawProjectile(t)}),this.players.forEach(t=>{this.drawPlayer(t)}),this.drawPlayer(this.myPlayer,!0),requestAnimationFrame(()=>this.gameLoop()))}drawPlayer(e,s=!1){this.ctx&&(this.ctx.beginPath(),this.ctx.arc(e.x,e.y,t.RADIUS,0,2*Math.PI),this.ctx.fillStyle=e.color,this.ctx.fill(),s&&(this.ctx.strokeStyle=i,this.ctx.lineWidth=t.STROKE_WIDTH,this.ctx.stroke()),this.ctx.fillStyle=i,this.ctx.font="12px Arial",this.ctx.textAlign="center",this.ctx.fillText(s?"You":e.id.substring(0,6),e.x,e.y-t.ID_DISPLAY_OFFSET))}drawProjectile(t){this.ctx&&(this.ctx.beginPath(),this.ctx.arc(t.x,t.y,3,0,2*Math.PI),this.ctx.fillStyle="#ff4444",this.ctx.fill())}getRandomColor(){return t.COLORS[Math.floor(Math.random()*t.COLORS.length)]}showRoomControls(){this.roomControls&&this.gameContainer&&(this.roomControls.style.display="block",this.gameContainer.style.display="none")}showGameContainer(t){this.roomControls&&this.gameContainer&&this.roomIdDisplay&&this.roomLinkDisplay&&(this.roomControls.style.display="none",this.gameContainer.style.display="block",this.roomIdDisplay.textContent=t,this.roomLinkDisplay.value=this.roomManager.getRoomLink()||"")}}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{new a}):new a})();