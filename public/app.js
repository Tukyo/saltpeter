(()=>{"use strict";class e{constructor(e){this.currentRoom=null,this.ws=null,this.messageHandlers=[],this.userId=e}setWebSocket(e){this.ws=e,this.setupMessageHandler()}createRoom(){const e="room_"+Math.random().toString(36).substring(2,10);return this.joinRoom(e,!0),e}joinRoom(e,t=!1){if(!this.ws||this.ws.readyState!==WebSocket.OPEN)return void console.error("WebSocket not connected");const o={type:t?"create-room":"join-room",roomId:e,userId:this.userId};this.ws.send(JSON.stringify(o)),this.currentRoom=e,function(e){const t=`${window.location.origin}?room=${e}`;window.history.pushState({roomId:e},"",t)}(e)}leaveRoom(){if(!this.currentRoom||!this.ws)return;const e={type:"leave-room",roomId:this.currentRoom,userId:this.userId};this.ws.send(JSON.stringify(e)),this.currentRoom=null,window.history.pushState({},"",window.location.origin)}sendMessage(e){if(!this.currentRoom||!this.ws)return;const t={type:"room-message",roomId:this.currentRoom,userId:this.userId,message:e};this.ws.send(JSON.stringify(t))}getCurrentRoom(){return this.currentRoom}getRoomLink(){return this.currentRoom?(e=this.currentRoom,`${window.location.origin}?room=${e}`):null;var e}onMessage(e){this.messageHandlers.push(e)}setupMessageHandler(){this.ws&&(this.ws.onmessage=e=>{try{const t=JSON.parse(e.data);this.messageHandlers.forEach(e=>e(t))}catch(t){const o={type:"room-message",userId:"server",message:e.data};this.messageHandlers.forEach(e=>e(o))}})}}class t{constructor(){this.ws=null,this.canvas=null,this.ctx=null,this.roomControls=null,this.gameContainer=null,this.userIdDisplay=null,this.roomIdDisplay=null,this.roomLinkDisplay=null,this.players=new Map,this.keys=new Set,this.gameRunning=!1,this.userId=Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15),this.roomManager=new e(this.userId),this.myPlayer={id:this.userId,x:760*Math.random()+20,y:560*Math.random()+20,color:this.getRandomColor()},"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{this.initializeElements(),this.setupEventListeners(),this.checkForRoomInURL()}):(this.initializeElements(),this.setupEventListeners(),this.checkForRoomInURL())}initializeElements(){this.canvas=document.getElementById("gameCanvas"),this.roomControls=document.getElementById("roomControls"),this.gameContainer=document.getElementById("gameContainer"),this.userIdDisplay=document.getElementById("userId"),this.roomIdDisplay=document.getElementById("roomId"),this.roomLinkDisplay=document.getElementById("roomLink"),this.canvas&&this.roomControls&&this.gameContainer&&this.userIdDisplay&&this.roomIdDisplay&&this.roomLinkDisplay?(this.ctx=this.canvas.getContext("2d"),this.ctx?(this.userIdDisplay.textContent=this.userId,this.showRoomControls()):console.error("Could not get canvas context")):console.error("Some required DOM elements are missing")}setupEventListeners(){document.getElementById("hostBtn")?.addEventListener("click",()=>this.hostRoom()),document.getElementById("joinBtn")?.addEventListener("click",()=>this.joinRoom()),document.getElementById("leaveBtn")?.addEventListener("click",()=>this.leaveRoom()),document.getElementById("copyLinkBtn")?.addEventListener("click",()=>this.copyRoomLink()),document.addEventListener("keydown",e=>this.onKeyDown(e)),document.addEventListener("keyup",e=>this.onKeyUp(e)),this.roomManager.onMessage(e=>this.handleRoomMessage(e))}connectWebSocket(){const e="https:"===location.protocol?"wss:":"ws:";this.ws=new WebSocket(`${e}//${location.host}`),this.ws.onopen=()=>{console.log("Connected to WebSocket"),this.roomManager.setWebSocket(this.ws)},this.ws.onclose=()=>{console.log("Disconnected from WebSocket"),this.gameRunning=!1,setTimeout(()=>this.connectWebSocket(),3e3)},this.ws.onerror=e=>{console.error("WebSocket error:",e)}}checkForRoomInURL(){const e=new URLSearchParams(window.location.search).get("room");e&&(this.connectWebSocket(),setTimeout(()=>{this.roomManager.joinRoom(e)},1e3))}hostRoom(){if(this.ws){const e=this.roomManager.createRoom();this.showGameContainer(e)}else this.connectWebSocket(),setTimeout(()=>{const e=this.roomManager.createRoom();this.showGameContainer(e)},1e3)}joinRoom(){const e=prompt("Enter room link:");if(e)try{const t=new URL(e),o=new URLSearchParams(t.search).get("room");if(!o)return void alert("Invalid room link");this.ws?(this.roomManager.joinRoom(o),this.showGameContainer(o)):(this.connectWebSocket(),setTimeout(()=>{this.roomManager.joinRoom(o),this.showGameContainer(o)},1e3))}catch(e){alert("Invalid room link format")}}leaveRoom(){this.roomManager.leaveRoom(),this.gameRunning=!1,this.players.clear(),this.showRoomControls()}copyRoomLink(){const e=this.roomManager.getRoomLink();if(e&&this.roomLinkDisplay){this.roomLinkDisplay.value=e,this.roomLinkDisplay.select();try{document.execCommand("copy"),alert("Room link copied to clipboard!")}catch(t){navigator.clipboard?.writeText(e).then(()=>{alert("Room link copied to clipboard!")}).catch(()=>{alert("Could not copy to clipboard. Please copy manually.")})}}}onKeyDown(e){if(!this.gameRunning)return;const t=e.key.toLowerCase();["w","a","s","d"].includes(t)&&(e.preventDefault(),this.keys.add(t))}onKeyUp(e){if(!this.gameRunning)return;const t=e.key.toLowerCase();["w","a","s","d"].includes(t)&&(e.preventDefault(),this.keys.delete(t))}updatePlayerPosition(){if(!this.gameRunning)return;let e=!1;this.keys.has("w")&&this.myPlayer.y>15&&(this.myPlayer.y-=5,e=!0),this.keys.has("s")&&this.myPlayer.y<585&&(this.myPlayer.y+=5,e=!0),this.keys.has("a")&&this.myPlayer.x>15&&(this.myPlayer.x-=5,e=!0),this.keys.has("d")&&this.myPlayer.x<785&&(this.myPlayer.x+=5,e=!0),e&&this.roomManager.sendMessage(JSON.stringify({type:"player-move",x:this.myPlayer.x,y:this.myPlayer.y}))}handleRoomMessage(e){switch(e.type){case"room-created":console.log("Room created"),this.startGame();break;case"room-joined":console.log("Joined room"),this.startGame(),this.roomManager.sendMessage(JSON.stringify({type:"player-join",x:this.myPlayer.x,y:this.myPlayer.y,color:this.myPlayer.color}));break;case"user-joined":console.log(`User ${e.userId} joined`);break;case"user-left":console.log(`User ${e.userId} left`),this.players.delete(e.userId);break;case"room-message":this.handleGameMessage(e);break;case"room-error":alert(`Error: ${e.message}`)}}handleGameMessage(e){if(e.message)try{const t=JSON.parse(e.message);switch(t.type){case"player-join":this.players.set(e.userId,{id:e.userId,x:t.x,y:t.y,color:t.color}),this.roomManager.sendMessage(JSON.stringify({type:"player-join",x:this.myPlayer.x,y:this.myPlayer.y,color:this.myPlayer.color}));break;case"player-move":if(this.players.has(e.userId)){const o=this.players.get(e.userId);o.x=t.x,o.y=t.y}}}catch(e){console.error("Error parsing game message:",e)}}startGame(){this.gameRunning=!0,this.gameLoop()}gameLoop(){this.gameRunning&&this.ctx&&this.canvas&&(this.updatePlayerPosition(),this.ctx.fillStyle="#f0f0f0",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.strokeStyle="#333",this.ctx.lineWidth=2,this.ctx.strokeRect(0,0,this.canvas.width,this.canvas.height),this.players.forEach(e=>{this.drawPlayer(e)}),this.drawPlayer(this.myPlayer,!0),requestAnimationFrame(()=>this.gameLoop()))}drawPlayer(e,t=!1){this.ctx&&(this.ctx.beginPath(),this.ctx.arc(e.x,e.y,15,0,2*Math.PI),this.ctx.fillStyle=e.color,this.ctx.fill(),t&&(this.ctx.strokeStyle="#000",this.ctx.lineWidth=3,this.ctx.stroke()),this.ctx.fillStyle="#000",this.ctx.font="12px Arial",this.ctx.textAlign="center",this.ctx.fillText(t?"You":e.id.substring(0,6),e.x,e.y-25))}getRandomColor(){const e=["#FF6B6B","#4ECDC4","#45B7D1","#96CEB4","#FFEAA7","#DDA0DD","#98D8C8"];return e[Math.floor(Math.random()*e.length)]}showRoomControls(){this.roomControls&&this.gameContainer&&(this.roomControls.style.display="block",this.gameContainer.style.display="none")}showGameContainer(e){this.roomControls&&this.gameContainer&&this.roomIdDisplay&&this.roomLinkDisplay&&(this.roomControls.style.display="none",this.gameContainer.style.display="block",this.roomIdDisplay.textContent=e,this.roomLinkDisplay.value=this.roomManager.getRoomLink()||"")}}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{new t}):new t})();